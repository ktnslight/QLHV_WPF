#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLHV_WPF
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLHV")]
	public partial class DataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBIEN_LAI(BIEN_LAI instance);
    partial void UpdateBIEN_LAI(BIEN_LAI instance);
    partial void DeleteBIEN_LAI(BIEN_LAI instance);
    partial void InsertCA_HOC(CA_HOC instance);
    partial void UpdateCA_HOC(CA_HOC instance);
    partial void DeleteCA_HOC(CA_HOC instance);
    partial void InsertCAU_HOI(CAU_HOI instance);
    partial void UpdateCAU_HOI(CAU_HOI instance);
    partial void DeleteCAU_HOI(CAU_HOI instance);
    partial void InsertCT_DETHI(CT_DETHI instance);
    partial void UpdateCT_DETHI(CT_DETHI instance);
    partial void DeleteCT_DETHI(CT_DETHI instance);
    partial void InsertDAY(DAY instance);
    partial void UpdateDAY(DAY instance);
    partial void DeleteDAY(DAY instance);
    partial void InsertDETHI(DETHI instance);
    partial void UpdateDETHI(DETHI instance);
    partial void DeleteDETHI(DETHI instance);
    partial void InsertGIAO_VIEN(GIAO_VIEN instance);
    partial void UpdateGIAO_VIEN(GIAO_VIEN instance);
    partial void DeleteGIAO_VIEN(GIAO_VIEN instance);
    partial void InsertHOC(HOC instance);
    partial void UpdateHOC(HOC instance);
    partial void DeleteHOC(HOC instance);
    partial void InsertHOC_VIEN(HOC_VIEN instance);
    partial void UpdateHOC_VIEN(HOC_VIEN instance);
    partial void DeleteHOC_VIEN(HOC_VIEN instance);
    partial void InsertKHOA_HOC(KHOA_HOC instance);
    partial void UpdateKHOA_HOC(KHOA_HOC instance);
    partial void DeleteKHOA_HOC(KHOA_HOC instance);
    partial void InsertKI_THI(KI_THI instance);
    partial void UpdateKI_THI(KI_THI instance);
    partial void DeleteKI_THI(KI_THI instance);
    partial void InsertLOP_HOC(LOP_HOC instance);
    partial void UpdateLOP_HOC(LOP_HOC instance);
    partial void DeleteLOP_HOC(LOP_HOC instance);
    partial void InsertPHAN_CONG(PHAN_CONG instance);
    partial void UpdatePHAN_CONG(PHAN_CONG instance);
    partial void DeletePHAN_CONG(PHAN_CONG instance);
    partial void InsertPHAN_QUYEN(PHAN_QUYEN instance);
    partial void UpdatePHAN_QUYEN(PHAN_QUYEN instance);
    partial void DeletePHAN_QUYEN(PHAN_QUYEN instance);
    partial void InsertTAI_KHOAN(TAI_KHOAN instance);
    partial void UpdateTAI_KHOAN(TAI_KHOAN instance);
    partial void DeleteTAI_KHOAN(TAI_KHOAN instance);
    partial void InsertTHI(THI instance);
    partial void UpdateTHI(THI instance);
    partial void DeleteTHI(THI instance);
    partial void InsertXUAT(XUAT instance);
    partial void UpdateXUAT(XUAT instance);
    partial void DeleteXUAT(XUAT instance);
    #endregion
		
		public DataDataContext() : 
				base(global::QLHV_WPF.Properties.Settings.Default.QLHVConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BIEN_LAI> BIEN_LAIs
		{
			get
			{
				return this.GetTable<BIEN_LAI>();
			}
		}
		
		public System.Data.Linq.Table<CA_HOC> CA_HOCs
		{
			get
			{
				return this.GetTable<CA_HOC>();
			}
		}
		
		public System.Data.Linq.Table<CAU_HOI> CAU_HOIs
		{
			get
			{
				return this.GetTable<CAU_HOI>();
			}
		}
		
		public System.Data.Linq.Table<CT_DETHI> CT_DETHIs
		{
			get
			{
				return this.GetTable<CT_DETHI>();
			}
		}
		
		public System.Data.Linq.Table<DAY> DAYs
		{
			get
			{
				return this.GetTable<DAY>();
			}
		}
		
		public System.Data.Linq.Table<DETHI> DETHIs
		{
			get
			{
				return this.GetTable<DETHI>();
			}
		}
		
		public System.Data.Linq.Table<GIAO_VIEN> GIAO_VIENs
		{
			get
			{
				return this.GetTable<GIAO_VIEN>();
			}
		}
		
		public System.Data.Linq.Table<HOC> HOCs
		{
			get
			{
				return this.GetTable<HOC>();
			}
		}
		
		public System.Data.Linq.Table<HOC_VIEN> HOC_VIENs
		{
			get
			{
				return this.GetTable<HOC_VIEN>();
			}
		}
		
		public System.Data.Linq.Table<KHOA_HOC> KHOA_HOCs
		{
			get
			{
				return this.GetTable<KHOA_HOC>();
			}
		}
		
		public System.Data.Linq.Table<KI_THI> KI_THIs
		{
			get
			{
				return this.GetTable<KI_THI>();
			}
		}
		
		public System.Data.Linq.Table<LOP_HOC> LOP_HOCs
		{
			get
			{
				return this.GetTable<LOP_HOC>();
			}
		}
		
		public System.Data.Linq.Table<PHAN_CONG> PHAN_CONGs
		{
			get
			{
				return this.GetTable<PHAN_CONG>();
			}
		}
		
		public System.Data.Linq.Table<PHAN_QUYEN> PHAN_QUYENs
		{
			get
			{
				return this.GetTable<PHAN_QUYEN>();
			}
		}
		
		public System.Data.Linq.Table<TAI_KHOAN> TAI_KHOANs
		{
			get
			{
				return this.GetTable<TAI_KHOAN>();
			}
		}
		
		public System.Data.Linq.Table<THI> THIs
		{
			get
			{
				return this.GetTable<THI>();
			}
		}
		
		public System.Data.Linq.Table<XUAT> XUATs
		{
			get
			{
				return this.GetTable<XUAT>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BIEN_LAI")]
	public partial class BIEN_LAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaBL;
		
		private System.DateTime _NgayBL;
		
		private string _NoiDung;
		
		private int _SoTien;
		
		private EntitySet<XUAT> _XUATs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBLChanging(int value);
    partial void OnMaBLChanged();
    partial void OnNgayBLChanging(System.DateTime value);
    partial void OnNgayBLChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnSoTienChanging(int value);
    partial void OnSoTienChanged();
    #endregion
		
		public BIEN_LAI()
		{
			this._XUATs = new EntitySet<XUAT>(new Action<XUAT>(this.attach_XUATs), new Action<XUAT>(this.detach_XUATs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBL", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaBL
		{
			get
			{
				return this._MaBL;
			}
			set
			{
				if ((this._MaBL != value))
				{
					this.OnMaBLChanging(value);
					this.SendPropertyChanging();
					this._MaBL = value;
					this.SendPropertyChanged("MaBL");
					this.OnMaBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBL", DbType="Date NOT NULL")]
		public System.DateTime NgayBL
		{
			get
			{
				return this._NgayBL;
			}
			set
			{
				if ((this._NgayBL != value))
				{
					this.OnNgayBLChanging(value);
					this.SendPropertyChanging();
					this._NgayBL = value;
					this.SendPropertyChanged("NgayBL");
					this.OnNgayBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTien", DbType="Int NOT NULL")]
		public int SoTien
		{
			get
			{
				return this._SoTien;
			}
			set
			{
				if ((this._SoTien != value))
				{
					this.OnSoTienChanging(value);
					this.SendPropertyChanging();
					this._SoTien = value;
					this.SendPropertyChanged("SoTien");
					this.OnSoTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BIEN_LAI_XUAT", Storage="_XUATs", ThisKey="MaBL", OtherKey="MaBL")]
		public EntitySet<XUAT> XUATs
		{
			get
			{
				return this._XUATs;
			}
			set
			{
				this._XUATs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XUATs(XUAT entity)
		{
			this.SendPropertyChanging();
			entity.BIEN_LAI = this;
		}
		
		private void detach_XUATs(XUAT entity)
		{
			this.SendPropertyChanging();
			entity.BIEN_LAI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CA_HOC")]
	public partial class CA_HOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCaHoc;
		
		private string _Buoi;
		
		private string _Gio;
		
		private EntitySet<PHAN_CONG> _PHAN_CONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCaHocChanging(int value);
    partial void OnMaCaHocChanged();
    partial void OnBuoiChanging(string value);
    partial void OnBuoiChanged();
    partial void OnGioChanging(string value);
    partial void OnGioChanged();
    #endregion
		
		public CA_HOC()
		{
			this._PHAN_CONGs = new EntitySet<PHAN_CONG>(new Action<PHAN_CONG>(this.attach_PHAN_CONGs), new Action<PHAN_CONG>(this.detach_PHAN_CONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCaHoc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaCaHoc
		{
			get
			{
				return this._MaCaHoc;
			}
			set
			{
				if ((this._MaCaHoc != value))
				{
					this.OnMaCaHocChanging(value);
					this.SendPropertyChanging();
					this._MaCaHoc = value;
					this.SendPropertyChanged("MaCaHoc");
					this.OnMaCaHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Buoi", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Buoi
		{
			get
			{
				return this._Buoi;
			}
			set
			{
				if ((this._Buoi != value))
				{
					this.OnBuoiChanging(value);
					this.SendPropertyChanging();
					this._Buoi = value;
					this.SendPropertyChanged("Buoi");
					this.OnBuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gio", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Gio
		{
			get
			{
				return this._Gio;
			}
			set
			{
				if ((this._Gio != value))
				{
					this.OnGioChanging(value);
					this.SendPropertyChanging();
					this._Gio = value;
					this.SendPropertyChanged("Gio");
					this.OnGioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CA_HOC_PHAN_CONG", Storage="_PHAN_CONGs", ThisKey="MaCaHoc", OtherKey="MaCaHoc")]
		public EntitySet<PHAN_CONG> PHAN_CONGs
		{
			get
			{
				return this._PHAN_CONGs;
			}
			set
			{
				this._PHAN_CONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHAN_CONGs(PHAN_CONG entity)
		{
			this.SendPropertyChanging();
			entity.CA_HOC = this;
		}
		
		private void detach_PHAN_CONGs(PHAN_CONG entity)
		{
			this.SendPropertyChanging();
			entity.CA_HOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CAU_HOI")]
	public partial class CAU_HOI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCauHoi;
		
		private string _CauHoi;
		
		private string _DapAnA;
		
		private string _DapAnB;
		
		private string _DapAnC;
		
		private string _DapAnD;
		
		private string _TraLoi;
		
		private string _MaLopHoc;
		
		private EntitySet<CT_DETHI> _CT_DETHIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCauHoiChanging(int value);
    partial void OnMaCauHoiChanged();
    partial void OnCauHoiChanging(string value);
    partial void OnCauHoiChanged();
    partial void OnDapAnAChanging(string value);
    partial void OnDapAnAChanged();
    partial void OnDapAnBChanging(string value);
    partial void OnDapAnBChanged();
    partial void OnDapAnCChanging(string value);
    partial void OnDapAnCChanged();
    partial void OnDapAnDChanging(string value);
    partial void OnDapAnDChanged();
    partial void OnTraLoiChanging(string value);
    partial void OnTraLoiChanged();
    partial void OnMaLopHocChanging(string value);
    partial void OnMaLopHocChanged();
    #endregion
		
		public CAU_HOI()
		{
			this._CT_DETHIs = new EntitySet<CT_DETHI>(new Action<CT_DETHI>(this.attach_CT_DETHIs), new Action<CT_DETHI>(this.detach_CT_DETHIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCauHoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaCauHoi
		{
			get
			{
				return this._MaCauHoi;
			}
			set
			{
				if ((this._MaCauHoi != value))
				{
					this.OnMaCauHoiChanging(value);
					this.SendPropertyChanging();
					this._MaCauHoi = value;
					this.SendPropertyChanged("MaCauHoi");
					this.OnMaCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauHoi", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string CauHoi
		{
			get
			{
				return this._CauHoi;
			}
			set
			{
				if ((this._CauHoi != value))
				{
					this.OnCauHoiChanging(value);
					this.SendPropertyChanging();
					this._CauHoi = value;
					this.SendPropertyChanged("CauHoi");
					this.OnCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAnA", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string DapAnA
		{
			get
			{
				return this._DapAnA;
			}
			set
			{
				if ((this._DapAnA != value))
				{
					this.OnDapAnAChanging(value);
					this.SendPropertyChanging();
					this._DapAnA = value;
					this.SendPropertyChanged("DapAnA");
					this.OnDapAnAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAnB", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string DapAnB
		{
			get
			{
				return this._DapAnB;
			}
			set
			{
				if ((this._DapAnB != value))
				{
					this.OnDapAnBChanging(value);
					this.SendPropertyChanging();
					this._DapAnB = value;
					this.SendPropertyChanged("DapAnB");
					this.OnDapAnBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAnC", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string DapAnC
		{
			get
			{
				return this._DapAnC;
			}
			set
			{
				if ((this._DapAnC != value))
				{
					this.OnDapAnCChanging(value);
					this.SendPropertyChanging();
					this._DapAnC = value;
					this.SendPropertyChanged("DapAnC");
					this.OnDapAnCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAnD", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string DapAnD
		{
			get
			{
				return this._DapAnD;
			}
			set
			{
				if ((this._DapAnD != value))
				{
					this.OnDapAnDChanging(value);
					this.SendPropertyChanging();
					this._DapAnD = value;
					this.SendPropertyChanged("DapAnD");
					this.OnDapAnDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TraLoi", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string TraLoi
		{
			get
			{
				return this._TraLoi;
			}
			set
			{
				if ((this._TraLoi != value))
				{
					this.OnTraLoiChanging(value);
					this.SendPropertyChanging();
					this._TraLoi = value;
					this.SendPropertyChanged("TraLoi");
					this.OnTraLoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLopHoc", DbType="NVarChar(7)")]
		public string MaLopHoc
		{
			get
			{
				return this._MaLopHoc;
			}
			set
			{
				if ((this._MaLopHoc != value))
				{
					this.OnMaLopHocChanging(value);
					this.SendPropertyChanging();
					this._MaLopHoc = value;
					this.SendPropertyChanged("MaLopHoc");
					this.OnMaLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAU_HOI_CT_DETHI", Storage="_CT_DETHIs", ThisKey="MaCauHoi", OtherKey="MaCauHoi")]
		public EntitySet<CT_DETHI> CT_DETHIs
		{
			get
			{
				return this._CT_DETHIs;
			}
			set
			{
				this._CT_DETHIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DETHIs(CT_DETHI entity)
		{
			this.SendPropertyChanging();
			entity.CAU_HOI = this;
		}
		
		private void detach_CT_DETHIs(CT_DETHI entity)
		{
			this.SendPropertyChanging();
			entity.CAU_HOI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_DETHI")]
	public partial class CT_DETHI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDeThi;
		
		private int _MaCauHoi;
		
		private EntityRef<CAU_HOI> _CAU_HOI;
		
		private EntityRef<DETHI> _DETHI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDeThiChanging(int value);
    partial void OnMaDeThiChanged();
    partial void OnMaCauHoiChanging(int value);
    partial void OnMaCauHoiChanged();
    #endregion
		
		public CT_DETHI()
		{
			this._CAU_HOI = default(EntityRef<CAU_HOI>);
			this._DETHI = default(EntityRef<DETHI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDeThi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDeThi
		{
			get
			{
				return this._MaDeThi;
			}
			set
			{
				if ((this._MaDeThi != value))
				{
					if (this._DETHI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDeThiChanging(value);
					this.SendPropertyChanging();
					this._MaDeThi = value;
					this.SendPropertyChanged("MaDeThi");
					this.OnMaDeThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCauHoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaCauHoi
		{
			get
			{
				return this._MaCauHoi;
			}
			set
			{
				if ((this._MaCauHoi != value))
				{
					if (this._CAU_HOI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCauHoiChanging(value);
					this.SendPropertyChanging();
					this._MaCauHoi = value;
					this.SendPropertyChanged("MaCauHoi");
					this.OnMaCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAU_HOI_CT_DETHI", Storage="_CAU_HOI", ThisKey="MaCauHoi", OtherKey="MaCauHoi", IsForeignKey=true)]
		public CAU_HOI CAU_HOI
		{
			get
			{
				return this._CAU_HOI.Entity;
			}
			set
			{
				CAU_HOI previousValue = this._CAU_HOI.Entity;
				if (((previousValue != value) 
							|| (this._CAU_HOI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAU_HOI.Entity = null;
						previousValue.CT_DETHIs.Remove(this);
					}
					this._CAU_HOI.Entity = value;
					if ((value != null))
					{
						value.CT_DETHIs.Add(this);
						this._MaCauHoi = value.MaCauHoi;
					}
					else
					{
						this._MaCauHoi = default(int);
					}
					this.SendPropertyChanged("CAU_HOI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DETHI_CT_DETHI", Storage="_DETHI", ThisKey="MaDeThi", OtherKey="MaDeThi", IsForeignKey=true)]
		public DETHI DETHI
		{
			get
			{
				return this._DETHI.Entity;
			}
			set
			{
				DETHI previousValue = this._DETHI.Entity;
				if (((previousValue != value) 
							|| (this._DETHI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DETHI.Entity = null;
						previousValue.CT_DETHIs.Remove(this);
					}
					this._DETHI.Entity = value;
					if ((value != null))
					{
						value.CT_DETHIs.Add(this);
						this._MaDeThi = value.MaDeThi;
					}
					else
					{
						this._MaDeThi = default(int);
					}
					this.SendPropertyChanged("DETHI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DAY")]
	public partial class DAY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLopHoc;
		
		private string _MaGiaoVien;
		
		private EntityRef<GIAO_VIEN> _GIAO_VIEN;
		
		private EntityRef<LOP_HOC> _LOP_HOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopHocChanging(string value);
    partial void OnMaLopHocChanged();
    partial void OnMaGiaoVienChanging(string value);
    partial void OnMaGiaoVienChanged();
    #endregion
		
		public DAY()
		{
			this._GIAO_VIEN = default(EntityRef<GIAO_VIEN>);
			this._LOP_HOC = default(EntityRef<LOP_HOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLopHoc", DbType="NVarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLopHoc
		{
			get
			{
				return this._MaLopHoc;
			}
			set
			{
				if ((this._MaLopHoc != value))
				{
					if (this._LOP_HOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopHocChanging(value);
					this.SendPropertyChanging();
					this._MaLopHoc = value;
					this.SendPropertyChanged("MaLopHoc");
					this.OnMaLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiaoVien", DbType="NVarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGiaoVien
		{
			get
			{
				return this._MaGiaoVien;
			}
			set
			{
				if ((this._MaGiaoVien != value))
				{
					if (this._GIAO_VIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._MaGiaoVien = value;
					this.SendPropertyChanged("MaGiaoVien");
					this.OnMaGiaoVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAO_VIEN_DAY", Storage="_GIAO_VIEN", ThisKey="MaGiaoVien", OtherKey="MaGiaoVien", IsForeignKey=true)]
		public GIAO_VIEN GIAO_VIEN
		{
			get
			{
				return this._GIAO_VIEN.Entity;
			}
			set
			{
				GIAO_VIEN previousValue = this._GIAO_VIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIAO_VIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIAO_VIEN.Entity = null;
						previousValue.DAYs.Remove(this);
					}
					this._GIAO_VIEN.Entity = value;
					if ((value != null))
					{
						value.DAYs.Add(this);
						this._MaGiaoVien = value.MaGiaoVien;
					}
					else
					{
						this._MaGiaoVien = default(string);
					}
					this.SendPropertyChanged("GIAO_VIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_HOC_DAY", Storage="_LOP_HOC", ThisKey="MaLopHoc", OtherKey="MaLopHoc", IsForeignKey=true)]
		public LOP_HOC LOP_HOC
		{
			get
			{
				return this._LOP_HOC.Entity;
			}
			set
			{
				LOP_HOC previousValue = this._LOP_HOC.Entity;
				if (((previousValue != value) 
							|| (this._LOP_HOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP_HOC.Entity = null;
						previousValue.DAYs.Remove(this);
					}
					this._LOP_HOC.Entity = value;
					if ((value != null))
					{
						value.DAYs.Add(this);
						this._MaLopHoc = value.MaLopHoc;
					}
					else
					{
						this._MaLopHoc = default(string);
					}
					this.SendPropertyChanged("LOP_HOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DETHI")]
	public partial class DETHI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDeThi;
		
		private string _MaKiThi;
		
		private EntitySet<CT_DETHI> _CT_DETHIs;
		
		private EntitySet<THI> _THIs;
		
		private EntityRef<KI_THI> _KI_THI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDeThiChanging(int value);
    partial void OnMaDeThiChanged();
    partial void OnMaKiThiChanging(string value);
    partial void OnMaKiThiChanged();
    #endregion
		
		public DETHI()
		{
			this._CT_DETHIs = new EntitySet<CT_DETHI>(new Action<CT_DETHI>(this.attach_CT_DETHIs), new Action<CT_DETHI>(this.detach_CT_DETHIs));
			this._THIs = new EntitySet<THI>(new Action<THI>(this.attach_THIs), new Action<THI>(this.detach_THIs));
			this._KI_THI = default(EntityRef<KI_THI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDeThi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDeThi
		{
			get
			{
				return this._MaDeThi;
			}
			set
			{
				if ((this._MaDeThi != value))
				{
					this.OnMaDeThiChanging(value);
					this.SendPropertyChanging();
					this._MaDeThi = value;
					this.SendPropertyChanged("MaDeThi");
					this.OnMaDeThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKiThi", DbType="NVarChar(7) NOT NULL", CanBeNull=false)]
		public string MaKiThi
		{
			get
			{
				return this._MaKiThi;
			}
			set
			{
				if ((this._MaKiThi != value))
				{
					if (this._KI_THI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKiThiChanging(value);
					this.SendPropertyChanging();
					this._MaKiThi = value;
					this.SendPropertyChanged("MaKiThi");
					this.OnMaKiThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DETHI_CT_DETHI", Storage="_CT_DETHIs", ThisKey="MaDeThi", OtherKey="MaDeThi")]
		public EntitySet<CT_DETHI> CT_DETHIs
		{
			get
			{
				return this._CT_DETHIs;
			}
			set
			{
				this._CT_DETHIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DETHI_THI", Storage="_THIs", ThisKey="MaDeThi", OtherKey="MaDeThi")]
		public EntitySet<THI> THIs
		{
			get
			{
				return this._THIs;
			}
			set
			{
				this._THIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KI_THI_DETHI", Storage="_KI_THI", ThisKey="MaKiThi", OtherKey="MaKiThi", IsForeignKey=true)]
		public KI_THI KI_THI
		{
			get
			{
				return this._KI_THI.Entity;
			}
			set
			{
				KI_THI previousValue = this._KI_THI.Entity;
				if (((previousValue != value) 
							|| (this._KI_THI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KI_THI.Entity = null;
						previousValue.DETHIs.Remove(this);
					}
					this._KI_THI.Entity = value;
					if ((value != null))
					{
						value.DETHIs.Add(this);
						this._MaKiThi = value.MaKiThi;
					}
					else
					{
						this._MaKiThi = default(string);
					}
					this.SendPropertyChanged("KI_THI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DETHIs(CT_DETHI entity)
		{
			this.SendPropertyChanging();
			entity.DETHI = this;
		}
		
		private void detach_CT_DETHIs(CT_DETHI entity)
		{
			this.SendPropertyChanging();
			entity.DETHI = null;
		}
		
		private void attach_THIs(THI entity)
		{
			this.SendPropertyChanging();
			entity.DETHI = this;
		}
		
		private void detach_THIs(THI entity)
		{
			this.SendPropertyChanging();
			entity.DETHI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIAO_VIEN")]
	public partial class GIAO_VIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGiaoVien;
		
		private string _HoTenGiaoVien;
		
		private System.DateTime _NgaySinh;
		
		private string _DiaChi;
		
		private string _Email;
		
		private EntitySet<DAY> _DAYs;
		
		private EntitySet<PHAN_CONG> _PHAN_CONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGiaoVienChanging(string value);
    partial void OnMaGiaoVienChanged();
    partial void OnHoTenGiaoVienChanging(string value);
    partial void OnHoTenGiaoVienChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public GIAO_VIEN()
		{
			this._DAYs = new EntitySet<DAY>(new Action<DAY>(this.attach_DAYs), new Action<DAY>(this.detach_DAYs));
			this._PHAN_CONGs = new EntitySet<PHAN_CONG>(new Action<PHAN_CONG>(this.attach_PHAN_CONGs), new Action<PHAN_CONG>(this.detach_PHAN_CONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiaoVien", DbType="NVarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGiaoVien
		{
			get
			{
				return this._MaGiaoVien;
			}
			set
			{
				if ((this._MaGiaoVien != value))
				{
					this.OnMaGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._MaGiaoVien = value;
					this.SendPropertyChanged("MaGiaoVien");
					this.OnMaGiaoVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenGiaoVien", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTenGiaoVien
		{
			get
			{
				return this._HoTenGiaoVien;
			}
			set
			{
				if ((this._HoTenGiaoVien != value))
				{
					this.OnHoTenGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._HoTenGiaoVien = value;
					this.SendPropertyChanged("HoTenGiaoVien");
					this.OnHoTenGiaoVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date NOT NULL")]
		public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAO_VIEN_DAY", Storage="_DAYs", ThisKey="MaGiaoVien", OtherKey="MaGiaoVien")]
		public EntitySet<DAY> DAYs
		{
			get
			{
				return this._DAYs;
			}
			set
			{
				this._DAYs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAO_VIEN_PHAN_CONG", Storage="_PHAN_CONGs", ThisKey="MaGiaoVien", OtherKey="MaGiaoVien")]
		public EntitySet<PHAN_CONG> PHAN_CONGs
		{
			get
			{
				return this._PHAN_CONGs;
			}
			set
			{
				this._PHAN_CONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DAYs(DAY entity)
		{
			this.SendPropertyChanging();
			entity.GIAO_VIEN = this;
		}
		
		private void detach_DAYs(DAY entity)
		{
			this.SendPropertyChanging();
			entity.GIAO_VIEN = null;
		}
		
		private void attach_PHAN_CONGs(PHAN_CONG entity)
		{
			this.SendPropertyChanging();
			entity.GIAO_VIEN = this;
		}
		
		private void detach_PHAN_CONGs(PHAN_CONG entity)
		{
			this.SendPropertyChanging();
			entity.GIAO_VIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOC")]
	public partial class HOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHocVien;
		
		private string _MaLopHoc;
		
		private EntityRef<HOC_VIEN> _HOC_VIEN;
		
		private EntityRef<LOP_HOC> _LOP_HOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHocVienChanging(string value);
    partial void OnMaHocVienChanged();
    partial void OnMaLopHocChanging(string value);
    partial void OnMaLopHocChanged();
    #endregion
		
		public HOC()
		{
			this._HOC_VIEN = default(EntityRef<HOC_VIEN>);
			this._LOP_HOC = default(EntityRef<LOP_HOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocVien", DbType="NVarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocVien
		{
			get
			{
				return this._MaHocVien;
			}
			set
			{
				if ((this._MaHocVien != value))
				{
					if (this._HOC_VIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocVienChanging(value);
					this.SendPropertyChanging();
					this._MaHocVien = value;
					this.SendPropertyChanged("MaHocVien");
					this.OnMaHocVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLopHoc", DbType="NVarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLopHoc
		{
			get
			{
				return this._MaLopHoc;
			}
			set
			{
				if ((this._MaLopHoc != value))
				{
					if (this._LOP_HOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopHocChanging(value);
					this.SendPropertyChanging();
					this._MaLopHoc = value;
					this.SendPropertyChanged("MaLopHoc");
					this.OnMaLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOC_VIEN_HOC", Storage="_HOC_VIEN", ThisKey="MaHocVien", OtherKey="MaHocVien", IsForeignKey=true)]
		public HOC_VIEN HOC_VIEN
		{
			get
			{
				return this._HOC_VIEN.Entity;
			}
			set
			{
				HOC_VIEN previousValue = this._HOC_VIEN.Entity;
				if (((previousValue != value) 
							|| (this._HOC_VIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOC_VIEN.Entity = null;
						previousValue.HOCs.Remove(this);
					}
					this._HOC_VIEN.Entity = value;
					if ((value != null))
					{
						value.HOCs.Add(this);
						this._MaHocVien = value.MaHocVien;
					}
					else
					{
						this._MaHocVien = default(string);
					}
					this.SendPropertyChanged("HOC_VIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_HOC_HOC", Storage="_LOP_HOC", ThisKey="MaLopHoc", OtherKey="MaLopHoc", IsForeignKey=true)]
		public LOP_HOC LOP_HOC
		{
			get
			{
				return this._LOP_HOC.Entity;
			}
			set
			{
				LOP_HOC previousValue = this._LOP_HOC.Entity;
				if (((previousValue != value) 
							|| (this._LOP_HOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP_HOC.Entity = null;
						previousValue.HOCs.Remove(this);
					}
					this._LOP_HOC.Entity = value;
					if ((value != null))
					{
						value.HOCs.Add(this);
						this._MaLopHoc = value.MaLopHoc;
					}
					else
					{
						this._MaLopHoc = default(string);
					}
					this.SendPropertyChanged("LOP_HOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOC_VIEN")]
	public partial class HOC_VIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHocVien;
		
		private string _HoTenHocVien;
		
		private System.DateTime _NgaySinh;
		
		private string _DiaChi;
		
		private string _SoDT;
		
		private string _NgheNghiep;
		
		private string _Email;
		
		private string _GioiTinh;
		
		private string _TaiKhoan;
		
		private EntitySet<HOC> _HOCs;
		
		private EntitySet<THI> _THIs;
		
		private EntitySet<XUAT> _XUATs;
		
		private EntityRef<TAI_KHOAN> _TAI_KHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHocVienChanging(string value);
    partial void OnMaHocVienChanged();
    partial void OnHoTenHocVienChanging(string value);
    partial void OnHoTenHocVienChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoDTChanging(string value);
    partial void OnSoDTChanged();
    partial void OnNgheNghiepChanging(string value);
    partial void OnNgheNghiepChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    #endregion
		
		public HOC_VIEN()
		{
			this._HOCs = new EntitySet<HOC>(new Action<HOC>(this.attach_HOCs), new Action<HOC>(this.detach_HOCs));
			this._THIs = new EntitySet<THI>(new Action<THI>(this.attach_THIs), new Action<THI>(this.detach_THIs));
			this._XUATs = new EntitySet<XUAT>(new Action<XUAT>(this.attach_XUATs), new Action<XUAT>(this.detach_XUATs));
			this._TAI_KHOAN = default(EntityRef<TAI_KHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocVien", DbType="NVarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocVien
		{
			get
			{
				return this._MaHocVien;
			}
			set
			{
				if ((this._MaHocVien != value))
				{
					this.OnMaHocVienChanging(value);
					this.SendPropertyChanging();
					this._MaHocVien = value;
					this.SendPropertyChanged("MaHocVien");
					this.OnMaHocVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenHocVien", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTenHocVien
		{
			get
			{
				return this._HoTenHocVien;
			}
			set
			{
				if ((this._HoTenHocVien != value))
				{
					this.OnHoTenHocVienChanging(value);
					this.SendPropertyChanging();
					this._HoTenHocVien = value;
					this.SendPropertyChanged("HoTenHocVien");
					this.OnHoTenHocVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date NOT NULL")]
		public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDT", DbType="NVarChar(50)")]
		public string SoDT
		{
			get
			{
				return this._SoDT;
			}
			set
			{
				if ((this._SoDT != value))
				{
					this.OnSoDTChanging(value);
					this.SendPropertyChanging();
					this._SoDT = value;
					this.SendPropertyChanged("SoDT");
					this.OnSoDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgheNghiep", DbType="NVarChar(50)")]
		public string NgheNghiep
		{
			get
			{
				return this._NgheNghiep;
			}
			set
			{
				if ((this._NgheNghiep != value))
				{
					this.OnNgheNghiepChanging(value);
					this.SendPropertyChanging();
					this._NgheNghiep = value;
					this.SendPropertyChanged("NgheNghiep");
					this.OnNgheNghiepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="NVarChar(50)")]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					if (this._TAI_KHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOC_VIEN_HOC", Storage="_HOCs", ThisKey="MaHocVien", OtherKey="MaHocVien")]
		public EntitySet<HOC> HOCs
		{
			get
			{
				return this._HOCs;
			}
			set
			{
				this._HOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOC_VIEN_THI", Storage="_THIs", ThisKey="MaHocVien", OtherKey="MaHocVien")]
		public EntitySet<THI> THIs
		{
			get
			{
				return this._THIs;
			}
			set
			{
				this._THIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOC_VIEN_XUAT", Storage="_XUATs", ThisKey="MaHocVien", OtherKey="MaHocVien")]
		public EntitySet<XUAT> XUATs
		{
			get
			{
				return this._XUATs;
			}
			set
			{
				this._XUATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAI_KHOAN_HOC_VIEN", Storage="_TAI_KHOAN", ThisKey="TaiKhoan", OtherKey="TaiKhoan", IsForeignKey=true)]
		public TAI_KHOAN TAI_KHOAN
		{
			get
			{
				return this._TAI_KHOAN.Entity;
			}
			set
			{
				TAI_KHOAN previousValue = this._TAI_KHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAI_KHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAI_KHOAN.Entity = null;
						previousValue.HOC_VIENs.Remove(this);
					}
					this._TAI_KHOAN.Entity = value;
					if ((value != null))
					{
						value.HOC_VIENs.Add(this);
						this._TaiKhoan = value.TaiKhoan;
					}
					else
					{
						this._TaiKhoan = default(string);
					}
					this.SendPropertyChanged("TAI_KHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOCs(HOC entity)
		{
			this.SendPropertyChanging();
			entity.HOC_VIEN = this;
		}
		
		private void detach_HOCs(HOC entity)
		{
			this.SendPropertyChanging();
			entity.HOC_VIEN = null;
		}
		
		private void attach_THIs(THI entity)
		{
			this.SendPropertyChanging();
			entity.HOC_VIEN = this;
		}
		
		private void detach_THIs(THI entity)
		{
			this.SendPropertyChanging();
			entity.HOC_VIEN = null;
		}
		
		private void attach_XUATs(XUAT entity)
		{
			this.SendPropertyChanging();
			entity.HOC_VIEN = this;
		}
		
		private void detach_XUATs(XUAT entity)
		{
			this.SendPropertyChanging();
			entity.HOC_VIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHOA_HOC")]
	public partial class KHOA_HOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKhoaHoc;
		
		private string _TenKhoaHoc;
		
		private System.DateTime _NgayBD;
		
		private System.DateTime _NgayKT;
		
		private EntitySet<LOP_HOC> _LOP_HOCs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhoaHocChanging(string value);
    partial void OnMaKhoaHocChanged();
    partial void OnTenKhoaHocChanging(string value);
    partial void OnTenKhoaHocChanged();
    partial void OnNgayBDChanging(System.DateTime value);
    partial void OnNgayBDChanged();
    partial void OnNgayKTChanging(System.DateTime value);
    partial void OnNgayKTChanged();
    #endregion
		
		public KHOA_HOC()
		{
			this._LOP_HOCs = new EntitySet<LOP_HOC>(new Action<LOP_HOC>(this.attach_LOP_HOCs), new Action<LOP_HOC>(this.detach_LOP_HOCs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoaHoc", DbType="NVarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKhoaHoc
		{
			get
			{
				return this._MaKhoaHoc;
			}
			set
			{
				if ((this._MaKhoaHoc != value))
				{
					this.OnMaKhoaHocChanging(value);
					this.SendPropertyChanging();
					this._MaKhoaHoc = value;
					this.SendPropertyChanged("MaKhoaHoc");
					this.OnMaKhoaHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhoaHoc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenKhoaHoc
		{
			get
			{
				return this._TenKhoaHoc;
			}
			set
			{
				if ((this._TenKhoaHoc != value))
				{
					this.OnTenKhoaHocChanging(value);
					this.SendPropertyChanging();
					this._TenKhoaHoc = value;
					this.SendPropertyChanged("TenKhoaHoc");
					this.OnTenKhoaHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBD", DbType="Date NOT NULL")]
		public System.DateTime NgayBD
		{
			get
			{
				return this._NgayBD;
			}
			set
			{
				if ((this._NgayBD != value))
				{
					this.OnNgayBDChanging(value);
					this.SendPropertyChanging();
					this._NgayBD = value;
					this.SendPropertyChanged("NgayBD");
					this.OnNgayBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKT", DbType="Date NOT NULL")]
		public System.DateTime NgayKT
		{
			get
			{
				return this._NgayKT;
			}
			set
			{
				if ((this._NgayKT != value))
				{
					this.OnNgayKTChanging(value);
					this.SendPropertyChanging();
					this._NgayKT = value;
					this.SendPropertyChanged("NgayKT");
					this.OnNgayKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_HOC_LOP_HOC", Storage="_LOP_HOCs", ThisKey="MaKhoaHoc", OtherKey="MaKhoaHoc")]
		public EntitySet<LOP_HOC> LOP_HOCs
		{
			get
			{
				return this._LOP_HOCs;
			}
			set
			{
				this._LOP_HOCs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOP_HOCs(LOP_HOC entity)
		{
			this.SendPropertyChanging();
			entity.KHOA_HOC = this;
		}
		
		private void detach_LOP_HOCs(LOP_HOC entity)
		{
			this.SendPropertyChanging();
			entity.KHOA_HOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KI_THI")]
	public partial class KI_THI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKiThi;
		
		private string _TenKiThi;
		
		private EntitySet<DETHI> _DETHIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKiThiChanging(string value);
    partial void OnMaKiThiChanged();
    partial void OnTenKiThiChanging(string value);
    partial void OnTenKiThiChanged();
    #endregion
		
		public KI_THI()
		{
			this._DETHIs = new EntitySet<DETHI>(new Action<DETHI>(this.attach_DETHIs), new Action<DETHI>(this.detach_DETHIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKiThi", DbType="NVarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKiThi
		{
			get
			{
				return this._MaKiThi;
			}
			set
			{
				if ((this._MaKiThi != value))
				{
					this.OnMaKiThiChanging(value);
					this.SendPropertyChanging();
					this._MaKiThi = value;
					this.SendPropertyChanged("MaKiThi");
					this.OnMaKiThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKiThi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenKiThi
		{
			get
			{
				return this._TenKiThi;
			}
			set
			{
				if ((this._TenKiThi != value))
				{
					this.OnTenKiThiChanging(value);
					this.SendPropertyChanging();
					this._TenKiThi = value;
					this.SendPropertyChanged("TenKiThi");
					this.OnTenKiThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KI_THI_DETHI", Storage="_DETHIs", ThisKey="MaKiThi", OtherKey="MaKiThi")]
		public EntitySet<DETHI> DETHIs
		{
			get
			{
				return this._DETHIs;
			}
			set
			{
				this._DETHIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DETHIs(DETHI entity)
		{
			this.SendPropertyChanging();
			entity.KI_THI = this;
		}
		
		private void detach_DETHIs(DETHI entity)
		{
			this.SendPropertyChanging();
			entity.KI_THI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOP_HOC")]
	public partial class LOP_HOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLopHoc;
		
		private string _TenLopHoc;
		
		private int _SiSoDK;
		
		private int _HocPhi;
		
		private string _MaKhoaHoc;
		
		private EntitySet<DAY> _DAYs;
		
		private EntitySet<HOC> _HOCs;
		
		private EntitySet<PHAN_CONG> _PHAN_CONGs;
		
		private EntitySet<THI> _THIs;
		
		private EntityRef<KHOA_HOC> _KHOA_HOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopHocChanging(string value);
    partial void OnMaLopHocChanged();
    partial void OnTenLopHocChanging(string value);
    partial void OnTenLopHocChanged();
    partial void OnSiSoDKChanging(int value);
    partial void OnSiSoDKChanged();
    partial void OnHocPhiChanging(int value);
    partial void OnHocPhiChanged();
    partial void OnMaKhoaHocChanging(string value);
    partial void OnMaKhoaHocChanged();
    #endregion
		
		public LOP_HOC()
		{
			this._DAYs = new EntitySet<DAY>(new Action<DAY>(this.attach_DAYs), new Action<DAY>(this.detach_DAYs));
			this._HOCs = new EntitySet<HOC>(new Action<HOC>(this.attach_HOCs), new Action<HOC>(this.detach_HOCs));
			this._PHAN_CONGs = new EntitySet<PHAN_CONG>(new Action<PHAN_CONG>(this.attach_PHAN_CONGs), new Action<PHAN_CONG>(this.detach_PHAN_CONGs));
			this._THIs = new EntitySet<THI>(new Action<THI>(this.attach_THIs), new Action<THI>(this.detach_THIs));
			this._KHOA_HOC = default(EntityRef<KHOA_HOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLopHoc", DbType="NVarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLopHoc
		{
			get
			{
				return this._MaLopHoc;
			}
			set
			{
				if ((this._MaLopHoc != value))
				{
					this.OnMaLopHocChanging(value);
					this.SendPropertyChanging();
					this._MaLopHoc = value;
					this.SendPropertyChanged("MaLopHoc");
					this.OnMaLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLopHoc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenLopHoc
		{
			get
			{
				return this._TenLopHoc;
			}
			set
			{
				if ((this._TenLopHoc != value))
				{
					this.OnTenLopHocChanging(value);
					this.SendPropertyChanging();
					this._TenLopHoc = value;
					this.SendPropertyChanged("TenLopHoc");
					this.OnTenLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiSoDK", DbType="Int NOT NULL")]
		public int SiSoDK
		{
			get
			{
				return this._SiSoDK;
			}
			set
			{
				if ((this._SiSoDK != value))
				{
					this.OnSiSoDKChanging(value);
					this.SendPropertyChanging();
					this._SiSoDK = value;
					this.SendPropertyChanged("SiSoDK");
					this.OnSiSoDKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HocPhi", DbType="Int NOT NULL")]
		public int HocPhi
		{
			get
			{
				return this._HocPhi;
			}
			set
			{
				if ((this._HocPhi != value))
				{
					this.OnHocPhiChanging(value);
					this.SendPropertyChanging();
					this._HocPhi = value;
					this.SendPropertyChanged("HocPhi");
					this.OnHocPhiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoaHoc", DbType="NVarChar(7) NOT NULL", CanBeNull=false)]
		public string MaKhoaHoc
		{
			get
			{
				return this._MaKhoaHoc;
			}
			set
			{
				if ((this._MaKhoaHoc != value))
				{
					if (this._KHOA_HOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoaHocChanging(value);
					this.SendPropertyChanging();
					this._MaKhoaHoc = value;
					this.SendPropertyChanged("MaKhoaHoc");
					this.OnMaKhoaHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_HOC_DAY", Storage="_DAYs", ThisKey="MaLopHoc", OtherKey="MaLopHoc")]
		public EntitySet<DAY> DAYs
		{
			get
			{
				return this._DAYs;
			}
			set
			{
				this._DAYs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_HOC_HOC", Storage="_HOCs", ThisKey="MaLopHoc", OtherKey="MaLopHoc")]
		public EntitySet<HOC> HOCs
		{
			get
			{
				return this._HOCs;
			}
			set
			{
				this._HOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_HOC_PHAN_CONG", Storage="_PHAN_CONGs", ThisKey="MaLopHoc", OtherKey="MaLopHoc")]
		public EntitySet<PHAN_CONG> PHAN_CONGs
		{
			get
			{
				return this._PHAN_CONGs;
			}
			set
			{
				this._PHAN_CONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_HOC_THI", Storage="_THIs", ThisKey="MaLopHoc", OtherKey="MaLopHoc")]
		public EntitySet<THI> THIs
		{
			get
			{
				return this._THIs;
			}
			set
			{
				this._THIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_HOC_LOP_HOC", Storage="_KHOA_HOC", ThisKey="MaKhoaHoc", OtherKey="MaKhoaHoc", IsForeignKey=true)]
		public KHOA_HOC KHOA_HOC
		{
			get
			{
				return this._KHOA_HOC.Entity;
			}
			set
			{
				KHOA_HOC previousValue = this._KHOA_HOC.Entity;
				if (((previousValue != value) 
							|| (this._KHOA_HOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOA_HOC.Entity = null;
						previousValue.LOP_HOCs.Remove(this);
					}
					this._KHOA_HOC.Entity = value;
					if ((value != null))
					{
						value.LOP_HOCs.Add(this);
						this._MaKhoaHoc = value.MaKhoaHoc;
					}
					else
					{
						this._MaKhoaHoc = default(string);
					}
					this.SendPropertyChanged("KHOA_HOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DAYs(DAY entity)
		{
			this.SendPropertyChanging();
			entity.LOP_HOC = this;
		}
		
		private void detach_DAYs(DAY entity)
		{
			this.SendPropertyChanging();
			entity.LOP_HOC = null;
		}
		
		private void attach_HOCs(HOC entity)
		{
			this.SendPropertyChanging();
			entity.LOP_HOC = this;
		}
		
		private void detach_HOCs(HOC entity)
		{
			this.SendPropertyChanging();
			entity.LOP_HOC = null;
		}
		
		private void attach_PHAN_CONGs(PHAN_CONG entity)
		{
			this.SendPropertyChanging();
			entity.LOP_HOC = this;
		}
		
		private void detach_PHAN_CONGs(PHAN_CONG entity)
		{
			this.SendPropertyChanging();
			entity.LOP_HOC = null;
		}
		
		private void attach_THIs(THI entity)
		{
			this.SendPropertyChanging();
			entity.LOP_HOC = this;
		}
		
		private void detach_THIs(THI entity)
		{
			this.SendPropertyChanging();
			entity.LOP_HOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHAN_CONG")]
	public partial class PHAN_CONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGiaoVien;
		
		private int _MaCaHoc;
		
		private string _MaLopHoc;
		
		private EntityRef<CA_HOC> _CA_HOC;
		
		private EntityRef<GIAO_VIEN> _GIAO_VIEN;
		
		private EntityRef<LOP_HOC> _LOP_HOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGiaoVienChanging(string value);
    partial void OnMaGiaoVienChanged();
    partial void OnMaCaHocChanging(int value);
    partial void OnMaCaHocChanged();
    partial void OnMaLopHocChanging(string value);
    partial void OnMaLopHocChanged();
    #endregion
		
		public PHAN_CONG()
		{
			this._CA_HOC = default(EntityRef<CA_HOC>);
			this._GIAO_VIEN = default(EntityRef<GIAO_VIEN>);
			this._LOP_HOC = default(EntityRef<LOP_HOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGiaoVien", DbType="NVarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGiaoVien
		{
			get
			{
				return this._MaGiaoVien;
			}
			set
			{
				if ((this._MaGiaoVien != value))
				{
					if (this._GIAO_VIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGiaoVienChanging(value);
					this.SendPropertyChanging();
					this._MaGiaoVien = value;
					this.SendPropertyChanged("MaGiaoVien");
					this.OnMaGiaoVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCaHoc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaCaHoc
		{
			get
			{
				return this._MaCaHoc;
			}
			set
			{
				if ((this._MaCaHoc != value))
				{
					if (this._CA_HOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCaHocChanging(value);
					this.SendPropertyChanging();
					this._MaCaHoc = value;
					this.SendPropertyChanged("MaCaHoc");
					this.OnMaCaHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLopHoc", DbType="NVarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLopHoc
		{
			get
			{
				return this._MaLopHoc;
			}
			set
			{
				if ((this._MaLopHoc != value))
				{
					if (this._LOP_HOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopHocChanging(value);
					this.SendPropertyChanging();
					this._MaLopHoc = value;
					this.SendPropertyChanged("MaLopHoc");
					this.OnMaLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CA_HOC_PHAN_CONG", Storage="_CA_HOC", ThisKey="MaCaHoc", OtherKey="MaCaHoc", IsForeignKey=true)]
		public CA_HOC CA_HOC
		{
			get
			{
				return this._CA_HOC.Entity;
			}
			set
			{
				CA_HOC previousValue = this._CA_HOC.Entity;
				if (((previousValue != value) 
							|| (this._CA_HOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CA_HOC.Entity = null;
						previousValue.PHAN_CONGs.Remove(this);
					}
					this._CA_HOC.Entity = value;
					if ((value != null))
					{
						value.PHAN_CONGs.Add(this);
						this._MaCaHoc = value.MaCaHoc;
					}
					else
					{
						this._MaCaHoc = default(int);
					}
					this.SendPropertyChanged("CA_HOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAO_VIEN_PHAN_CONG", Storage="_GIAO_VIEN", ThisKey="MaGiaoVien", OtherKey="MaGiaoVien", IsForeignKey=true)]
		public GIAO_VIEN GIAO_VIEN
		{
			get
			{
				return this._GIAO_VIEN.Entity;
			}
			set
			{
				GIAO_VIEN previousValue = this._GIAO_VIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIAO_VIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIAO_VIEN.Entity = null;
						previousValue.PHAN_CONGs.Remove(this);
					}
					this._GIAO_VIEN.Entity = value;
					if ((value != null))
					{
						value.PHAN_CONGs.Add(this);
						this._MaGiaoVien = value.MaGiaoVien;
					}
					else
					{
						this._MaGiaoVien = default(string);
					}
					this.SendPropertyChanged("GIAO_VIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_HOC_PHAN_CONG", Storage="_LOP_HOC", ThisKey="MaLopHoc", OtherKey="MaLopHoc", IsForeignKey=true)]
		public LOP_HOC LOP_HOC
		{
			get
			{
				return this._LOP_HOC.Entity;
			}
			set
			{
				LOP_HOC previousValue = this._LOP_HOC.Entity;
				if (((previousValue != value) 
							|| (this._LOP_HOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP_HOC.Entity = null;
						previousValue.PHAN_CONGs.Remove(this);
					}
					this._LOP_HOC.Entity = value;
					if ((value != null))
					{
						value.PHAN_CONGs.Add(this);
						this._MaLopHoc = value.MaLopHoc;
					}
					else
					{
						this._MaLopHoc = default(string);
					}
					this.SendPropertyChanged("LOP_HOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHAN_QUYEN")]
	public partial class PHAN_QUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoai;
		
		private string _PhanQuyen;
		
		private EntitySet<TAI_KHOAN> _TAI_KHOANs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(int value);
    partial void OnMaLoaiChanged();
    partial void OnPhanQuyenChanging(string value);
    partial void OnPhanQuyenChanged();
    #endregion
		
		public PHAN_QUYEN()
		{
			this._TAI_KHOANs = new EntitySet<TAI_KHOAN>(new Action<TAI_KHOAN>(this.attach_TAI_KHOANs), new Action<TAI_KHOAN>(this.detach_TAI_KHOANs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhanQuyen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PhanQuyen
		{
			get
			{
				return this._PhanQuyen;
			}
			set
			{
				if ((this._PhanQuyen != value))
				{
					this.OnPhanQuyenChanging(value);
					this.SendPropertyChanging();
					this._PhanQuyen = value;
					this.SendPropertyChanged("PhanQuyen");
					this.OnPhanQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHAN_QUYEN_TAI_KHOAN", Storage="_TAI_KHOANs", ThisKey="MaLoai", OtherKey="MaLoai")]
		public EntitySet<TAI_KHOAN> TAI_KHOANs
		{
			get
			{
				return this._TAI_KHOANs;
			}
			set
			{
				this._TAI_KHOANs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TAI_KHOANs(TAI_KHOAN entity)
		{
			this.SendPropertyChanging();
			entity.PHAN_QUYEN = this;
		}
		
		private void detach_TAI_KHOANs(TAI_KHOAN entity)
		{
			this.SendPropertyChanging();
			entity.PHAN_QUYEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAI_KHOAN")]
	public partial class TAI_KHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TaiKhoan;
		
		private string _MatKhau;
		
		private int _MaLoai;
		
		private EntitySet<HOC_VIEN> _HOC_VIENs;
		
		private EntityRef<PHAN_QUYEN> _PHAN_QUYEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnMaLoaiChanging(int value);
    partial void OnMaLoaiChanged();
    #endregion
		
		public TAI_KHOAN()
		{
			this._HOC_VIENs = new EntitySet<HOC_VIEN>(new Action<HOC_VIEN>(this.attach_HOC_VIENs), new Action<HOC_VIEN>(this.detach_HOC_VIENs));
			this._PHAN_QUYEN = default(EntityRef<PHAN_QUYEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="Int NOT NULL")]
		public int MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					if (this._PHAN_QUYEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAI_KHOAN_HOC_VIEN", Storage="_HOC_VIENs", ThisKey="TaiKhoan", OtherKey="TaiKhoan")]
		public EntitySet<HOC_VIEN> HOC_VIENs
		{
			get
			{
				return this._HOC_VIENs;
			}
			set
			{
				this._HOC_VIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHAN_QUYEN_TAI_KHOAN", Storage="_PHAN_QUYEN", ThisKey="MaLoai", OtherKey="MaLoai", IsForeignKey=true)]
		public PHAN_QUYEN PHAN_QUYEN
		{
			get
			{
				return this._PHAN_QUYEN.Entity;
			}
			set
			{
				PHAN_QUYEN previousValue = this._PHAN_QUYEN.Entity;
				if (((previousValue != value) 
							|| (this._PHAN_QUYEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHAN_QUYEN.Entity = null;
						previousValue.TAI_KHOANs.Remove(this);
					}
					this._PHAN_QUYEN.Entity = value;
					if ((value != null))
					{
						value.TAI_KHOANs.Add(this);
						this._MaLoai = value.MaLoai;
					}
					else
					{
						this._MaLoai = default(int);
					}
					this.SendPropertyChanged("PHAN_QUYEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOC_VIENs(HOC_VIEN entity)
		{
			this.SendPropertyChanging();
			entity.TAI_KHOAN = this;
		}
		
		private void detach_HOC_VIENs(HOC_VIEN entity)
		{
			this.SendPropertyChanging();
			entity.TAI_KHOAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THI")]
	public partial class THI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDeThi;
		
		private string _MaLopHoc;
		
		private string _MaHocVien;
		
		private System.DateTime _NgayThi;
		
		private int _KetQua;
		
		private EntityRef<DETHI> _DETHI;
		
		private EntityRef<HOC_VIEN> _HOC_VIEN;
		
		private EntityRef<LOP_HOC> _LOP_HOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDeThiChanging(int value);
    partial void OnMaDeThiChanged();
    partial void OnMaLopHocChanging(string value);
    partial void OnMaLopHocChanged();
    partial void OnMaHocVienChanging(string value);
    partial void OnMaHocVienChanged();
    partial void OnNgayThiChanging(System.DateTime value);
    partial void OnNgayThiChanged();
    partial void OnKetQuaChanging(int value);
    partial void OnKetQuaChanged();
    #endregion
		
		public THI()
		{
			this._DETHI = default(EntityRef<DETHI>);
			this._HOC_VIEN = default(EntityRef<HOC_VIEN>);
			this._LOP_HOC = default(EntityRef<LOP_HOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDeThi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDeThi
		{
			get
			{
				return this._MaDeThi;
			}
			set
			{
				if ((this._MaDeThi != value))
				{
					if (this._DETHI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDeThiChanging(value);
					this.SendPropertyChanging();
					this._MaDeThi = value;
					this.SendPropertyChanged("MaDeThi");
					this.OnMaDeThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLopHoc", DbType="NVarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLopHoc
		{
			get
			{
				return this._MaLopHoc;
			}
			set
			{
				if ((this._MaLopHoc != value))
				{
					if (this._LOP_HOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopHocChanging(value);
					this.SendPropertyChanging();
					this._MaLopHoc = value;
					this.SendPropertyChanged("MaLopHoc");
					this.OnMaLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocVien", DbType="NVarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocVien
		{
			get
			{
				return this._MaHocVien;
			}
			set
			{
				if ((this._MaHocVien != value))
				{
					if (this._HOC_VIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocVienChanging(value);
					this.SendPropertyChanging();
					this._MaHocVien = value;
					this.SendPropertyChanged("MaHocVien");
					this.OnMaHocVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThi", DbType="Date NOT NULL")]
		public System.DateTime NgayThi
		{
			get
			{
				return this._NgayThi;
			}
			set
			{
				if ((this._NgayThi != value))
				{
					this.OnNgayThiChanging(value);
					this.SendPropertyChanging();
					this._NgayThi = value;
					this.SendPropertyChanged("NgayThi");
					this.OnNgayThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KetQua", DbType="Int NOT NULL")]
		public int KetQua
		{
			get
			{
				return this._KetQua;
			}
			set
			{
				if ((this._KetQua != value))
				{
					this.OnKetQuaChanging(value);
					this.SendPropertyChanging();
					this._KetQua = value;
					this.SendPropertyChanged("KetQua");
					this.OnKetQuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DETHI_THI", Storage="_DETHI", ThisKey="MaDeThi", OtherKey="MaDeThi", IsForeignKey=true)]
		public DETHI DETHI
		{
			get
			{
				return this._DETHI.Entity;
			}
			set
			{
				DETHI previousValue = this._DETHI.Entity;
				if (((previousValue != value) 
							|| (this._DETHI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DETHI.Entity = null;
						previousValue.THIs.Remove(this);
					}
					this._DETHI.Entity = value;
					if ((value != null))
					{
						value.THIs.Add(this);
						this._MaDeThi = value.MaDeThi;
					}
					else
					{
						this._MaDeThi = default(int);
					}
					this.SendPropertyChanged("DETHI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOC_VIEN_THI", Storage="_HOC_VIEN", ThisKey="MaHocVien", OtherKey="MaHocVien", IsForeignKey=true)]
		public HOC_VIEN HOC_VIEN
		{
			get
			{
				return this._HOC_VIEN.Entity;
			}
			set
			{
				HOC_VIEN previousValue = this._HOC_VIEN.Entity;
				if (((previousValue != value) 
							|| (this._HOC_VIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOC_VIEN.Entity = null;
						previousValue.THIs.Remove(this);
					}
					this._HOC_VIEN.Entity = value;
					if ((value != null))
					{
						value.THIs.Add(this);
						this._MaHocVien = value.MaHocVien;
					}
					else
					{
						this._MaHocVien = default(string);
					}
					this.SendPropertyChanged("HOC_VIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOP_HOC_THI", Storage="_LOP_HOC", ThisKey="MaLopHoc", OtherKey="MaLopHoc", IsForeignKey=true)]
		public LOP_HOC LOP_HOC
		{
			get
			{
				return this._LOP_HOC.Entity;
			}
			set
			{
				LOP_HOC previousValue = this._LOP_HOC.Entity;
				if (((previousValue != value) 
							|| (this._LOP_HOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOP_HOC.Entity = null;
						previousValue.THIs.Remove(this);
					}
					this._LOP_HOC.Entity = value;
					if ((value != null))
					{
						value.THIs.Add(this);
						this._MaLopHoc = value.MaLopHoc;
					}
					else
					{
						this._MaLopHoc = default(string);
					}
					this.SendPropertyChanged("LOP_HOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XUAT")]
	public partial class XUAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaBL;
		
		private string _MaHocVien;
		
		private EntityRef<BIEN_LAI> _BIEN_LAI;
		
		private EntityRef<HOC_VIEN> _HOC_VIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBLChanging(int value);
    partial void OnMaBLChanged();
    partial void OnMaHocVienChanging(string value);
    partial void OnMaHocVienChanged();
    #endregion
		
		public XUAT()
		{
			this._BIEN_LAI = default(EntityRef<BIEN_LAI>);
			this._HOC_VIEN = default(EntityRef<HOC_VIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBL", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaBL
		{
			get
			{
				return this._MaBL;
			}
			set
			{
				if ((this._MaBL != value))
				{
					if (this._BIEN_LAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBLChanging(value);
					this.SendPropertyChanging();
					this._MaBL = value;
					this.SendPropertyChanged("MaBL");
					this.OnMaBLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHocVien", DbType="NVarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHocVien
		{
			get
			{
				return this._MaHocVien;
			}
			set
			{
				if ((this._MaHocVien != value))
				{
					if (this._HOC_VIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHocVienChanging(value);
					this.SendPropertyChanging();
					this._MaHocVien = value;
					this.SendPropertyChanged("MaHocVien");
					this.OnMaHocVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BIEN_LAI_XUAT", Storage="_BIEN_LAI", ThisKey="MaBL", OtherKey="MaBL", IsForeignKey=true)]
		public BIEN_LAI BIEN_LAI
		{
			get
			{
				return this._BIEN_LAI.Entity;
			}
			set
			{
				BIEN_LAI previousValue = this._BIEN_LAI.Entity;
				if (((previousValue != value) 
							|| (this._BIEN_LAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BIEN_LAI.Entity = null;
						previousValue.XUATs.Remove(this);
					}
					this._BIEN_LAI.Entity = value;
					if ((value != null))
					{
						value.XUATs.Add(this);
						this._MaBL = value.MaBL;
					}
					else
					{
						this._MaBL = default(int);
					}
					this.SendPropertyChanged("BIEN_LAI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOC_VIEN_XUAT", Storage="_HOC_VIEN", ThisKey="MaHocVien", OtherKey="MaHocVien", IsForeignKey=true)]
		public HOC_VIEN HOC_VIEN
		{
			get
			{
				return this._HOC_VIEN.Entity;
			}
			set
			{
				HOC_VIEN previousValue = this._HOC_VIEN.Entity;
				if (((previousValue != value) 
							|| (this._HOC_VIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOC_VIEN.Entity = null;
						previousValue.XUATs.Remove(this);
					}
					this._HOC_VIEN.Entity = value;
					if ((value != null))
					{
						value.XUATs.Add(this);
						this._MaHocVien = value.MaHocVien;
					}
					else
					{
						this._MaHocVien = default(string);
					}
					this.SendPropertyChanged("HOC_VIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
